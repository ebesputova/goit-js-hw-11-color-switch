{"version":3,"sources":["bg-colors.js","choose-color.js","index.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","startBgColorChangeBtn","document","querySelector","stopBgColorChangeBtn","bodyElement","body","timerSetElementRandomBgColor","changeElementBgColor","element","bgColor","elem","HTMLElement","style","backgroundColor","setElementRandomBgColor","index","colors","length","newBgColor","onStartBgColorChangeBtnClick","setInterval","activateStopBgColorChangeBtn","activateStartBgColorChangeBtn","addEventListener","once","onStopBgColorBtnClick","clearInterval"],"mappings":";AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAAxD,QAAA,QAAA;;ACAR,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,+BAAA,EAAA,MAAMA,EAA4B,CAACC,EAAKC,IACtCC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAD/C,QAAA,0BAAA;;AC0CsB,aA1C7B,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,QAAA,kBAyC6B,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAvC7B,MAAMK,EAAwBC,SAASC,cAAc,yBAC/CC,EAAuBF,SAASC,cAAc,wBAC9CE,EAAcH,SAASI,KAC7B,IAAIC,EAA+B,KAEnC,MAAMC,EAAuB,CAACC,EAASC,KACjCC,IAAAA,EAAOF,GACNE,aAAgBC,cACnBD,EAAOT,SAASC,cAAcQ,IAE5BA,IACFF,EAAQI,MAAMC,gBAAkBJ,IAI9BK,EAA0BN,IACxBO,MAAAA,GAAQ,EAA0B,EAAA,2BAAA,EAAGC,EAAOC,QAAAA,OAAS,GACrDC,EAAaF,EAAOD,QAAAA,GAC1BR,EAAqBC,EAASU,IAG1BC,EAA+B,KACnCb,EAA+Bc,YAAYN,EAAyB,IAAMV,GAC1EiB,KAGIC,EAAgC,KACpCtB,EAAsBuB,iBAAiB,QAASJ,EAA8B,CAAEK,MAAM,KAGlFC,EAAwB,KAC5BC,cAAcpB,GACdgB,KAGID,EAA+B,KACnClB,EAAqBoB,iBAAiB,QAASE,EAAuB,CAAED,MAAM,KAGhFF","file":"src.98d6aec0.js","sourceRoot":"../src","sourcesContent":["export default ['#FFFFFF', '#2196F3', '#4CAF50', '#FF9800', '#009688', '#795548'];\n","export const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n","import colors from './bg-colors';\nimport { randomIntegerFromInterval } from './choose-color';\n\nconst startBgColorChangeBtn = document.querySelector('[data-action=\"start\"]');\nconst stopBgColorChangeBtn = document.querySelector('[data-action=\"stop\"]');\nconst bodyElement = document.body;\nlet timerSetElementRandomBgColor = null;\n\nconst changeElementBgColor = (element, bgColor) => {\n  let elem = element;\n  if (!elem instanceof HTMLElement) {\n    elem = document.querySelector(elem);\n  }\n  if (elem) {\n    element.style.backgroundColor = bgColor;\n  }\n};\n\nconst setElementRandomBgColor = element => {\n  const index = randomIntegerFromInterval(0, colors.length - 1);\n  const newBgColor = colors[index];\n  changeElementBgColor(element, newBgColor);\n};\n\nconst onStartBgColorChangeBtnClick = () => {\n  timerSetElementRandomBgColor = setInterval(setElementRandomBgColor, 1000, bodyElement);\n  activateStopBgColorChangeBtn();\n};\n\nconst activateStartBgColorChangeBtn = () => {\n  startBgColorChangeBtn.addEventListener('click', onStartBgColorChangeBtnClick, { once: true });\n};\n\nconst onStopBgColorBtnClick = () => {\n  clearInterval(timerSetElementRandomBgColor);\n  activateStartBgColorChangeBtn();\n};\n\nconst activateStopBgColorChangeBtn = () => {\n  stopBgColorChangeBtn.addEventListener('click', onStopBgColorBtnClick, { once: true });\n};\n\nactivateStartBgColorChangeBtn();\n"]}